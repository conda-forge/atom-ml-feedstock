{% set name = "atom-ml" %}
{% set version = "4.4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 58d0194c43cf2856a8d7cbe2b63f11d456ed24701ffbabaf35f5589ac88a9651

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . --no-deps -vv

requirements:
  host:
    - python >=3.6
    - pip
  run:
    - python >=3.6
    - numpy
    - scipy
    - pandas
    - dill
    - tqdm
    - joblib
    - typeguard
    - tabulate
    - scikit-learn
    - scikit-optimize
    - tpot
    - category_encoders
    - imbalanced-learn
    - pandas-profiling
    - featuretools
    - gplearn
    - matplotlib-base
    - seaborn
    - shap

test:
  requires:
    - pip
    - pytest
    - coverage
    - python
    - tensorflow
    - keras
    - numpy
    - scipy
    - pandas
    - dill
    - tqdm
    - joblib
    - typeguard
    - tabulate
    - scikit-learn
    - scikit-optimize
    - tpot
    - category_encoders
    - imbalanced-learn
    - pandas-profiling
    - featuretools
    - gplearn
    - matplotlib-base
    - seaborn
    #- shap   newest version not in conda-forge
    - py-xgboost  # [not win]
    - lightgbm
    - catboost
  source_files:
    - tests
  imports:
    - atom
  commands:
    - pip install -U shap
    - mkdir tests/files  # Directory to save files during testing
    - coverage run -m pytest

about:
  home: http://github.com/tvdboom/ATOM
  license: MIT
  license_file: LICENSE
  summary: A Python package for fast exploration of machine learning pipelines
  description: |
    During the exploration phase of a machine learning project, a data
    scientist tries to find the optimal pipeline for his specific use case.
    This usually involves applying standard data cleaning steps, creating
    or selecting useful features, trying out different models, etc. Testing
    multiple pipelines requires many lines of code, and writing it all in
    the same notebook often makes it long and cluttered. On the other hand,
    using multiple notebooks makes it harder to compare the results and to
    keep an overview. On top of that, refactoring the code for every test
    can be time-consuming. How many times have you conducted the same action
    to pre-process a raw dataset? How many times have you copy-and-pasted
    code from an old repository to re-use it in a new use case?

    ATOM is here to help solve these common issues. The package acts as
    a wrapper of the whole machine learning pipeline, helping the data
    scientist to rapidly find a good model for his problem. Avoid
    endless imports and documentation lookups. Avoid rewriting the same
    code over and over again. With just a few lines of code, it's now
    possible to perform basic data cleaning steps, select relevant
    features and compare the performance of multiple models on a given
    dataset, providing quick insights on which pipeline performs best
    for the task at hand.

  doc_url: http://github.com/tvdboom/ATOM/docs
  doc_source_url: http://github.com/tvdboom/ATOM/docs_sources
  dev_url: http://github.com/tvdboom/ATOM/tree/development

extra:
  recipe-maintainers:
    - tvdboom
